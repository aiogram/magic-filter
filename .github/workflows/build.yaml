name: build

on:
  push:
    branches:
      - '*'
    tags:
      - '**'
#  pull_request: {}

jobs:
  build:
    name: Test & Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - 3.6
          - 3.7
          - 3.8

    steps:
      - uses: actions/checkout@master

      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        env:
          SKIP_CYTHON: 1
        run: |
          pip install -U pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install

      - name: Lint
        run: |
          flake8 magic_filter
          isort --check-only -df magic_filter
          black --check --diff magic_filter

      - name: mypy
        run: mypy magic_filter

      - name: Compile Wheels
        run: |
          poetry build

      - name: Repair Linux Wheels
        if: matrix.os == 'ubuntu-latest'
        run: |
          docker run -v `pwd`:/io quay.io/pypa/manylinux1_x86_64 bash /io/scripts/repair-wheels.sh

      - name: Publish compiled artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/*.whl

      - name: Build sdist
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8' }}
        env:
          SKIP_CYTHON: 1
        run: |
          rm -rf dist
          poetry build --format sdist

      - name: Publish builded artifacts
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8' }}
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/*.tar.gz

  publish:
    name: Publish
    needs: build
    runs-on: ubuntu-latest
    # TODO: Check tags
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v1
        with:
          name: wheels
          path: dist

      - name: Publish a Python distribution to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
