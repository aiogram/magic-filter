name: build

on:
  push:
    branches:
      - '*'
    tags:
      - '**'
#  pull_request: {}

jobs:
  test-n-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - 3.6
          - 3.7
          - 3.8

    steps:
      - uses: actions/checkout@master

      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install ependencies
        env:
          SKIP_CYTHON: 1
        run: |
          pip install -U pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install

      - name: Lint
        run: |
          flake8 magic_filter
          isort --check-only -df magic_filter
          black --check --diff magic_filter

      - name: mypy
        run: mypy magic_filter

      - name: compile
        run: |
          poetry build

      - name: publish compiled artifacts
        uses: actions/upload-artifact@v2
        with:
          path: dist/*.whl

      - name: build
        if: ${{ matrix.os == 'ubuntu-linux' && matrix.python-version == '3.8' }}
        env:
          SKIP_CYTHON: 1
        run:
          rm -rf dist
          poetry build
          rename 's/^([a-z-_]+)-([\d\w.]+)-\w+-\w+-\w+\.whl$/$1-$2-py3-none-any.whl/' dist/*.whl

      - name: publish artifacts
        if: ${{ matrix.os == 'ubuntu-linux' && matrix.python-version == '3.8' }}
        uses: actions/upload-artifact@v2
        with:
          path: dist/*
